server:
  port: 9011   #固定端口
#  port: ${randomServerPort.value[7000,7005]}  #随机端口
#management:
#  endpoints:
#    web:
#      exposure:
#        include: "*"
#  endpoint:
#    health:
#      show-details: always
spring:
  application:
    name: service-user
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://127.0.0.1:3306/platform-user?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=false
    username: root
    password: 123456
    driver-class-name:  com.mysql.jdbc.Driver
    #连接池配置(通常来说，只需要修改initialSize、minIdle、maxActive
    initial-size: 1
    max-active: 20
    min-idle: 1
    # 配置获取连接等待超时的时间
    max-wait: 60000
    #打开PSCache，并且指定每个连接上PSCache的大小
    pool-prepared-statements: true
    max-pool-prepared-statement-per-connection-size: 20
    validation-query: SELECT 'x'
    #    test-on-borrow: false
    #    test-on-return: false
    #    test-while-idle: true
    #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    time-between-eviction-runs-millis: 60000
    #配置一个连接在池中最小生存的时间，单位是毫秒
    min-evictable-idle-time-millis: 300000
    filters: stat,wall
    # WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
    #是否启用StatFilter默认值true
    #    web-stat-filter.enabled: true
    #    web-stat-filter.url-pattern:  /*
    #    web-stat-filter.exclusions: "*.js , *.gif ,*.jpg ,*.png ,*.css ,*.ico , /druid/*"
    #    web-stat-filter.session-stat-max-count: 1000
    #    web-stat-filter.profile-enable: true
    # StatViewServlet配置
    #展示Druid的统计信息,StatViewServlet的用途包括：1.提供监控信息展示的html页面2.提供监控信息的JSON API
    #是否启用StatViewServlet默认值true
    #    stat-view-servlet.enabled: true
    #根据配置中的url-pattern来访问内置监控页面，如果是上面的配置，内置监控页面的首页是/druid/index.html例如：
    #http://110.76.43.235:9000/druid/index.html
    #http://110.76.43.235:8080/mini-web/druid/index.html
  #    stat-view-servlet.url-pattern:  /druid/*
  #    #允许清空统计数据
  #    stat-view-servlet.reset-enable:  true
  #    stat-view-servlet.login-username: admin
  #    stat-view-servlet.login-password: admin
  jpa:
    database: mysql
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        dialect: org.hibernate.dialect.MySQL5Dialect
        enable_lazy_load_no_trans: true
    hibernate:
      ddl-auto: update      #[create, create-drop, update]
      naming:
        strategy: org.hibernate.cfg.DefaultNamingStrategy
  thymeleaf:
    cache: false
    prefix: classpath:/templates
    mode: HTML5
    encoding: utf-8
    content-type: text/html;charset=utf-8
    suffix: .html
  mvc:
    static-path-pattern: /**
  resources:
    static-locations: classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/,
eureka:
  client:
    healthcheck:
      enabled: true
    serviceUrl:
      defaultZone:  http://127.0.0.1:9001/eureka,http://127.0.0.1:9002/eureka
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}  #固定端口
    #    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${randomServerPort.value[7000,7005]}}  #随机端口
    #instance-id: ${spring.application.name}:${docker.ipAddress}:${spring.application.instance_id:${server.port}}
    lease-renewal-interval-in-seconds: 5  #每隔几秒告诉eureka服务器我还存活，用于心跳检测
    lease-expiration-duration-in-seconds: 10 #如果心跳检测一直没有发送，10秒后会从eureka服务器中将此服务剔除
  #    status-page-url: http://${spring.cloud.client.ip-address}:${server.port}/document.html #固定端口
  #    status-page-url: http://${spring.cloud.client.ip-address}:${randomServerPort.value[7000,7005]}/document.html #随机端口


  
 